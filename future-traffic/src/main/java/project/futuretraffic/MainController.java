package project.futuretraffic;

import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;


@RestController // This means that this class is a Controller
@RequestMapping(path="/api") // This means that the url for all API's in this controller start with /api
public class MainController {

    private static final Logger log = LoggerFactory.getLogger(MainController.class);
   
    /**
     * This means to get the bean called busRepository
     * Which is auto generated by Spring, we will use it to handle the data
     */
    @Autowired 
    private BusRepository busRepository;

    // Get all buses
    @GetMapping(path="/all")
    public Iterable<Bus> getAllBuses(){
        // This returns a JSON with all the buses        
        return busRepository.findAll();
    }


    @Scheduled(fixedRate = 5000) // schedule task every 5 seconds
    public void readDataset() throws IOException { // function that reads one line at a time from .csv file

        RandomAccessFile file = new RandomAccessFile("src/main/resources/dataset.csv", "rw");
        RandomAccessFile line_pointer = new RandomAccessFile("line_pointer.txt", "rw");

        String pt = line_pointer.readLine();
        long position = Long.valueOf(pt);
        log.info("Line pointer: " + position);
        
        file.seek(position);
        String line = file.readLine();
        log.info("Line read from dataset:\n" + line);

        String[] data = line.split(",");
        int id = Integer.valueOf(data[0]);
        String node_id = data[1];
        int location_id = Integer.valueOf(data[2]);
        float head = !data[3].equals("") ? Float.valueOf(data[3]) : 0;
        float lon = Float.valueOf(data[4]);
        float lat = Float.valueOf(data[5]);
        int speed = !data[6].equals("") ? Integer.valueOf(data[6]) : 0;
        String ts = data[7];
        String write_time = data[8];

        Bus b = new Bus(node_id, id, location_id, head, lon, lat, speed, ts, write_time);
        log.info(b.toString());
        busRepository.save(b);
        
        
        position = file.getFilePointer();
        line_pointer.seek(0);
        line_pointer.writeBytes(String.valueOf(position));

        file.close();
        line_pointer.close();

    }
}