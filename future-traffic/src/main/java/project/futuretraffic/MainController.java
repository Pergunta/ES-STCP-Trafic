package project.futuretraffic;

import java.io.IOException;
import java.io.RandomAccessFile;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.LinkedList;
import java.util.List;
import java.util.Map;
import java.util.Optional;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.scheduling.annotation.Scheduled;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;
// import org.json.JSONObject;

import ch.qos.logback.core.pattern.parser.Node;
// import kafka.utils.json.JsonObject;

import org.apache.kafka.clients.consumer.Consumer;
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.apache.kafka.clients.consumer.ConsumerRecords;
import org.apache.kafka.clients.consumer.KafkaConsumer;
import org.apache.kafka.common.serialization.StringDeserializer;
import org.springframework.kafka.core.DefaultKafkaConsumerFactory;
import org.springframework.kafka.core.ConsumerFactory;

import org.springframework.context.annotation.Bean;
import java.util.Properties;

import javax.annotation.PostConstruct;

import com.fasterxml.jackson.databind.node.ObjectNode;
import com.fasterxml.jackson.databind.util.JSONPObject;

import org.springframework.kafka.annotation.KafkaListener;
import org.springframework.stereotype.Service;
import org.springframework.beans.factory.annotation.Autowired;

import org.springframework.boot.autoconfigure.kafka.KafkaProperties;



@RestController // This means that this class is a Controller
// @CrossOrigin(origins = "localhost:8888")
// @RequestMapping(path="/api") // This means that the url for all API's in this controller start with /api
public class MainController {

    private static final Logger log = LoggerFactory.getLogger(MainController.class);

    private final BusRepository bRepository;

    MainController(BusRepository bRepository) {
      this.bRepository = bRepository;
    }
    /**
     * This means to get the bean called busRepository
     * Which is auto generated by Spring, we will use it to handle the data
     */
    // @Autowired 
    // private BusRepository busRepository;

    // Get all buses
  
    @GetMapping("/all")
    //@SendTo("topic/esp22")
    public Iterable<Bus> getAllBuses(){
        // This returns a JSON with all the buses        
        return bRepository.findAll();
    }
    @GetMapping("/buses/{id}")
    Iterable<Bus> getBusesByID(@PathVariable String id) {
      
        System.out.println(bRepository.findBus(id));
        return bRepository.findBus(id);
    }
    @GetMapping("/speed/{id}")
    Integer getSpeedBus(@PathVariable String id) {
      
        System.out.println(bRepository.findBus(id));
        return bRepository.findSpeed(id);
    }
 
    @GetMapping("/speedNode1")
    Iterable<SpeedNode> getAllSpeedNode1(){
       
       List<SpeedNode> list_sp= new LinkedList<SpeedNode>();
       for (String s : bRepository.findSpeedNode()) {
            // SpeedNode sp=new SpeedNode();
            System.out.println(s);

            list_sp.add(new SpeedNode(Integer.parseInt(s.split(",")[1]),s.split(",")[0]));  
       }
       return list_sp;
    }
    @GetMapping("/speedNode2")
    Iterable<String> getAllSpeedNode2(){
      
       return bRepository.findSpeedNode();
    }

}